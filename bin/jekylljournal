#!/usr/bin/env ruby
require 'gli'
require 'yaml'
require 'date'
require 'jekylljournal'

include GLI::App

program_desc 'Jekyll Journal is a super awesome way to write daily blog posts.'
version Jekylljournal::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Opens a post for the blog'
command :open, :o do |c|
  c.action do |global_options,options,args|
    @journal_handler.open
  end
end

desc 'Adds all posts to git and commits them'
command :save, :s do |c|
  c.action do
    @journal_handler.save
  end
end

desc 'Starts a Jekyll preview server'
command :preview, :p do |c|
  c.action do
    @journal_handler.preview
  end
end

default_command :open

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  @journal_handler = Jekylljournal::Journalhandler.new
  return false unless @journal_handler
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
